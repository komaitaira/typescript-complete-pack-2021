(()=>{"use strict";class e{constructor(){}get totalScore(){return n.getInstance().activeElementsScore.reduce(((e,t)=>e+t),0)}render(){document.querySelector(".score__number").textContent=String(this.totalScore)}static getInstance(){return e.instance||(e.instance=new e),e.instance}}class t{constructor(e){this.element=e,e.addEventListener("click",this.clickEventHandler.bind(this))}clickEventHandler(){this.element.classList.toggle("food--active"),e.getInstance().render()}}class n{constructor(){this.elements=document.querySelectorAll(".food"),this._activeElements=[],this._activeElementsScore=[],this.elements.forEach((e=>{new t(e)}))}get activeElements(){return this._activeElements=[],this.elements.forEach((e=>{e.classList.contains("food--active")&&this._activeElements.push(e)})),this._activeElements}get activeElementsScore(){return this._activeElementsScore=[],this.activeElements.forEach((e=>{const t=e.querySelector(".food__score");t&&this._activeElementsScore.push(Number(t.textContent))})),this._activeElementsScore}static getInstance(){return n.instance||(n.instance=new n),n.instance}}n.getInstance()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFDTyxNQUFNQSxFQUNUQyxlQUNJQyxpQkFFQSxPQURjQyxFQUFNQyxjQUNQQyxvQkFBb0JDLFFBQU8sQ0FBQ0MsRUFBT0MsSUFBVUQsRUFBUUMsR0FBTyxHQUU3RUMsU0FDSUMsU0FBU0MsY0FBYyxrQkFBa0JDLFlBQWNDLE9BQU9DLEtBQUtaLFlBRXZFYSxxQkFJSSxPQUhLZixFQUFNZ0IsV0FDUGhCLEVBQU1nQixTQUFXLElBQUloQixHQUVsQkEsRUFBTWdCLFVDYmQsTUFBTUMsRUFDVGhCLFlBQVlpQixHQUNSSixLQUFLSSxRQUFVQSxFQUNmQSxFQUFRQyxpQkFBaUIsUUFBU0wsS0FBS00sa0JBQWtCQyxLQUFLUCxPQUVsRU0sb0JBQ0lOLEtBQUtJLFFBQVFJLFVBQVVDLE9BQU8sZ0JBQ2hCdkIsRUFBTUksY0FDZEssVUNSUCxNQUFNTixFQUNURixjQUNJYSxLQUFLVSxTQUFXZCxTQUFTZSxpQkFBaUIsU0FDMUNYLEtBQUtZLGdCQUFrQixHQUN2QlosS0FBS2EscUJBQXVCLEdBQzVCYixLQUFLVSxTQUFTSSxTQUFTVixJQUNuQixJQUFJRCxFQUFLQyxNQUdiVyxxQkFPQSxPQU5BZixLQUFLWSxnQkFBa0IsR0FDdkJaLEtBQUtVLFNBQVNJLFNBQVNWLElBQ2ZBLEVBQVFJLFVBQVVRLFNBQVMsaUJBQzNCaEIsS0FBS1ksZ0JBQWdCSyxLQUFLYixNQUczQkosS0FBS1ksZ0JBRVpyQiwwQkFRQSxPQVBBUyxLQUFLYSxxQkFBdUIsR0FDNUJiLEtBQUtlLGVBQWVELFNBQVNWLElBQ3pCLE1BQU1jLEVBQVlkLEVBQVFQLGNBQWMsZ0JBQ3BDcUIsR0FDQWxCLEtBQUthLHFCQUFxQkksS0FBS0UsT0FBT0QsRUFBVXBCLGlCQUdqREUsS0FBS2EscUJBRWhCWixxQkFJSSxPQUhLWixFQUFNYSxXQUNQYixFQUFNYSxTQUFXLElBQUliLEdBRWxCQSxFQUFNYSxVQ2hDckJiLEVBQU1DLGUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZWN0aW9uMTAvLi9zcmMvc2NvcmUudHMiLCJ3ZWJwYWNrOi8vc2VjdGlvbjEwLy4vc3JjL2Zvb2QudHMiLCJ3ZWJwYWNrOi8vc2VjdGlvbjEwLy4vc3JjL2Zvb2RzLnRzIiwid2VicGFjazovL3NlY3Rpb24xMC8uL3NyYy9tYWluLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvb2RzIH0gZnJvbSBcIi4vZm9vZHNcIjtcbmV4cG9ydCBjbGFzcyBTY29yZSB7XG4gICAgY29uc3RydWN0b3IoKSB7IH1cbiAgICBnZXQgdG90YWxTY29yZSgpIHtcbiAgICAgICAgY29uc3QgZm9vZHMgPSBGb29kcy5nZXRJbnN0YW5jZSgpO1xuICAgICAgICByZXR1cm4gZm9vZHMuYWN0aXZlRWxlbWVudHNTY29yZS5yZWR1Y2UoKHRvdGFsLCBzY29yZSkgPT4gdG90YWwgKyBzY29yZSwgMCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNjb3JlX19udW1iZXInKS50ZXh0Q29udGVudCA9IFN0cmluZyh0aGlzLnRvdGFsU2NvcmUpO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICghU2NvcmUuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIFNjb3JlLmluc3RhbmNlID0gbmV3IFNjb3JlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFNjb3JlLmluc3RhbmNlO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IFNjb3JlIH0gZnJvbSBcIi4vc2NvcmVcIjtcbmV4cG9ydCBjbGFzcyBGb29kIHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY2xpY2tFdmVudEhhbmRsZXIuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIGNsaWNrRXZlbnRIYW5kbGVyKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZShcImZvb2QtLWFjdGl2ZVwiKTtcbiAgICAgICAgY29uc3Qgc2NvcmUgPSBTY29yZS5nZXRJbnN0YW5jZSgpO1xuICAgICAgICBzY29yZS5yZW5kZXIoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBGb29kIH0gZnJvbSBcIi4vZm9vZFwiO1xuZXhwb3J0IGNsYXNzIEZvb2RzIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZm9vZFwiKTtcbiAgICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudHNTY29yZSA9IFtdO1xuICAgICAgICB0aGlzLmVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIG5ldyBGb29kKGVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0IGFjdGl2ZUVsZW1lbnRzKCkge1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50cyA9IFtdO1xuICAgICAgICB0aGlzLmVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhcImZvb2QtLWFjdGl2ZVwiKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzLnB1c2goZWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlRWxlbWVudHM7XG4gICAgfVxuICAgIGdldCBhY3RpdmVFbGVtZW50c1Njb3JlKCkge1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50c1Njb3JlID0gW107XG4gICAgICAgIHRoaXMuYWN0aXZlRWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZm9vZFNjb3JlID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvb2RfX3Njb3JlXCIpO1xuICAgICAgICAgICAgaWYgKGZvb2RTY29yZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzU2NvcmUucHVzaChOdW1iZXIoZm9vZFNjb3JlLnRleHRDb250ZW50KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlRWxlbWVudHNTY29yZTtcbiAgICB9XG4gICAgc3RhdGljIGdldEluc3RhbmNlKCkge1xuICAgICAgICBpZiAoIUZvb2RzLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBGb29kcy5pbnN0YW5jZSA9IG5ldyBGb29kcygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBGb29kcy5pbnN0YW5jZTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBGb29kcyB9IGZyb20gXCIuL2Zvb2RzXCI7XG5Gb29kcy5nZXRJbnN0YW5jZSgpO1xuIl0sIm5hbWVzIjpbIlNjb3JlIiwiY29uc3RydWN0b3IiLCJ0b3RhbFNjb3JlIiwiRm9vZHMiLCJnZXRJbnN0YW5jZSIsImFjdGl2ZUVsZW1lbnRzU2NvcmUiLCJyZWR1Y2UiLCJ0b3RhbCIsInNjb3JlIiwicmVuZGVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJTdHJpbmciLCJ0aGlzIiwic3RhdGljIiwiaW5zdGFuY2UiLCJGb29kIiwiZWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGlja0V2ZW50SGFuZGxlciIsImJpbmQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJlbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYWN0aXZlRWxlbWVudHMiLCJfYWN0aXZlRWxlbWVudHNTY29yZSIsImZvckVhY2giLCJhY3RpdmVFbGVtZW50cyIsImNvbnRhaW5zIiwicHVzaCIsImZvb2RTY29yZSIsIk51bWJlciJdLCJzb3VyY2VSb290IjoiIn0=